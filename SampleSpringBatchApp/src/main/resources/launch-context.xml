<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<context:property-placeholder location="classpath:batch.properties" />
	<context:annotation-config />
	<context:component-scan base-package="com.vendertool" />
	<jdbc:initialize-database data-source="dataSource">
		<jdbc:script location="${batch.schema.script}" />
	</jdbc:initialize-database>

	<batch:job-repository id="jobRepository" />

	<import resource="classpath:/META-INF/spring/module-context.xml" />

<!-- 	<batch:job id="TickerPriceConversion">
		<batch:step id="convertPrice">
			<batch:tasklet transaction-manager="transactionManager">
				<batch:chunk reader="tickerReader" processor="tickerPriceProcessor"
					writer="tickerWriter" commit-interval="10" />
			</batch:tasklet>
		</batch:step>
	</batch:job>
	<bean name="tickerReader"
		class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource"
			value="http://finance.yahoo.com/d/quotes.csv?s=XOM+IBM+JNJ+MSFT&amp;f=snd1ol1p2" />
		<property name="lineMapper" ref="tickerLineMapper" />
	</bean>

	<bean name="tickerLineMapper"
		class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
		<property name="fieldSetMapper" ref="tickerMapper" />
		<property name="lineTokenizer" ref="tickerLineTokenizer" />
	</bean>

	<bean name="tickerLineTokenizer"
		class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer" />
 -->

	<batch:job id="sample.jobIncrementer" restartable="false"
		incrementer="jobIncrementer.sampleIncrementer">
		<batch:step id="step">
			<batch:tasklet>
				<batch:chunk reader="jobIncrementer.sampleReader"
					processor="jobIncrementer.sampleProcessor" writer="jobIncrementer.sampleWriter"
					commit-interval="50" />
			</batch:tasklet>
		</batch:step>
	</batch:job>

</beans>
